var invert = require('invert-obj');

function SecurityType (securityType) {
  this.message = securityType;
}

SecurityType.prototype.value = function () {
  return this.message;
};


SecurityType.Keys = {
  'ASSET_BACKED_SECURITIES': 'ABS',
  'AMENDED_RESTATED': 'AMENDED',
  'OTHER_ANTICIPATION_NOTES': 'AN',
  'BANKERS_ACCEPTANCE': 'BA',
  'BANK_NOTES': 'BN',
  'BILL_OF_EXCHANGES': 'BOX',
  'BRADY_BOND': 'BRADY',
  'BRIDGE_LOAN': 'BRIDGE',
  'BUY_SELLBACK': 'BUYSELL',
  'CONVERTIBLE_BOND': 'CB',
  'CERTIFICATE_OF_DEPOSIT': 'CD',
  'CALL_LOANS': 'CL',
  'CORP_MORTGAGE_BACKED_SECURITIES': 'CMBS',
  'COLLATERALIZED_MORTGAGE_OBLIGATION': 'CMO',
  'CERTIFICATE_OF_OBLIGATION': 'COFO',
  'CERTIFICATE_OF_PARTICIPATION': 'COFP',
  'CORPORATE_BOND': 'CORP',
  'COMMERCIAL_PAPER': 'CP',
  'CORPORATE_PRIVATE_PLACEMENT': 'CPP',
  'COMMON_STOCK': 'CS',
  'DEFAULTED': 'DEFLTED',
  'DEBTOR_IN_POSSESSION': 'DINP',
  'DEPOSIT_NOTES': 'DN',
  'DUAL_CURRENCY': 'DUAL',
  'EURO_CERTIFICATE_OF_DEPOSIT': 'EUCD',
  'EURO_CORPORATE_BOND': 'EUCORP',
  'EURO_COMMERCIAL_PAPER': 'EUCP',
  'EURO_SOVEREIGNS': 'EUSOV',
  'EURO_SUPRANATIONAL_COUPONS': 'EUSUPRA',
  'FEDERAL_AGENCY_COUPON': 'FAC',
  'FEDERAL_AGENCY_DISCOUNT_NOTE': 'FADN',
  'FOREIGN_EXCHANGE_CONTRACT': 'FOR',
  'FORWARD': 'FORWARD',
  'FUTURE': 'FUT',
  'GENERAL_OBLIGATION_BONDS': 'GO',
  'IOETTE_MORTGAGE': 'IET',
  'LETTER_OF_CREDIT': 'LOFC',
  'LIQUIDITY_NOTE': 'LQN',
  'MATURED': 'MATURED',
  'MORTGAGE_BACKED_SECURITIES': 'MBS',
  'MUTUAL_FUND': 'MF',
  'MORTGAGE_INTEREST_ONLY': 'MIO',
  'MULTILEG_INSTRUMENT': 'MLEG',
  'MORTGAGE_PRINCIPAL_ONLY': 'MPO',
  'MORTGAGE_PRIVATE_PLACEMENT': 'MPP',
  'MISCELLANEOUS_PASS_THROUGH': 'MPT',
  'MANDATORY_TENDER': 'MT',
  'MEDIUM_TERM_NOTES': 'MTN',
  'NO_SECURITY_TYPE': 'NONE',
  'OVERNIGHT': 'ONITE',
  'OPTION': 'OPT',
  'PRIVATE_EXPORT_FUNDING': 'PEF',
  'PFANDBRIEFE': 'PFAND',
  'PROMISSORY_NOTE': 'PN',
  'PREFERRED_STOCK': 'PS',
  'PLAZOS_FIJOS': 'PZFJ',
  'REVENUE_ANTICIPATION_NOTE': 'RAN',
  'REPLACED': 'REPLACD',
  'REPURCHASE': 'REPO',
  'RETIRED': 'RETIRED',
  'REVENUE_BONDS': 'REV',
  'REVOLVER_LOAN': 'RVLV',
  'REVOLVER_TERM_LOAN': 'RVLVTRM',
  'SECURITIES_LOAN': 'SECLOAN',
  'SECURITIES_PLEDGE': 'SECPLEDGE',
  'SPECIAL_ASSESSMENT': 'SPCLA',
  'SPECIAL_OBLIGATION': 'SPCLO',
  'SPECIAL_TAX': 'SPCLT',
  'SHORT_TERM_LOAN_NOTE': 'STN',
  'STRUCTURED_NOTES': 'STRUCT',
  'USD_SUPRANATIONAL_COUPONS': 'SUPRA',
  'SWING_LINE_FACILITY': 'SWING',
  'TAX_ANTICIPATION_NOTE': 'TAN',
  'TAX_ALLOCATION': 'TAXA',
  'TO_BE_ANNOUNCED': 'TBA',
  'US_TREASURY_BILL_TBILL': 'TBILL',
  'US_TREASURY_BOND': 'TBOND',
  'PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE': 'TCAL',
  'TIME_DEPOSIT': 'TD',
  'TAX_EXEMPT_COMMERCIAL_PAPER': 'TECP',
  'TERM_LOAN': 'TERM',
  'INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE': 'TINT',
  'TREASURY_INFLATION_PROTECTED_SECURITIES': 'TIPS',
  'US_TREASURY_NOTE_TNOTE': 'TNOTE',
  'PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE': 'TPRN',
  'TAX_REVENUE_ANTICIPATION_NOTE': 'TRAN',
  'US_TREASURY_NOTE_UST': 'UST',
  'US_TREASURY_BILL_USTB': 'USTB',
  'VARIABLE_RATE_DEMAND_NOTE': 'VRDN',
  'WARRANT': 'WAR',
  'WITHDRAWN': 'WITHDRN',
  'WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST': '?',
  'EXTENDED_COMM_NOTE': 'XCN',
  'INDEXED_LINKED': 'XLINKD',
  'YANKEE_CORPORATE_BOND': 'YANK',
  'YANKEE_CERTIFICATE_OF_DEPOSIT': 'YCD',
  'OPTIONS_ON_PHYSICAL': 'OOP',
  'OPTIONS_ON_FUTURES': 'OOF',
  'CASH': 'CASH',
  'OPTIONS_ON_COMBO': 'OOC',
  'INTEREST_RATE_SWAP': 'IRS',
  'BANK_DEPOSITORY_NOTE': 'BDN',
  'CANADIAN_MONEY_MARKETS': 'CAMM',
  'CANADIAN_TREASURY_NOTES': 'CAN',
  'CANADIAN_TREASURY_BILLS': 'CTB',
  'CREDIT_DEFAULT_SWAP': 'CDS',
  'CANADIAN_MORTGAGE_BONDS': 'CMB',
  'EURO_CORPORATE_FLOATING_RATE_NOTES': 'EUFRN',
  'US_CORPORATE_FLOATING_RATE_NOTES': 'FRN',
  'CANADIAN_PROVINCIAL_BONDS': 'PROV',
  'SECURED_LIQUIDITY_NOTE': 'SLQN',
  'TREASURY_BILL': 'TB',
  'TERM_LIQUIDITY_NOTE': 'TLQN',
  'TAXABLE_MUNICIPAL_CP': 'TMCP',
};

SecurityType.Tag = '167';

SecurityType.Type = 'STRING';

SecurityType.Values = invert(SecurityType.Keys);

module.exports = SecurityType;